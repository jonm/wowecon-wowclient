resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: teliaoss/github-pr-resource

resources:
- name: source
  type: git
  check_every: 24h
  source:
    uri: https://github.com/jonm/wowecon-wowclient

- name: pr
  type: pull-request
  check_every: 24h
  source:
    repository: jonm/wowecon-wowclient
    access_token: ((github-access-token))

- name: artifacts
  type: s3
  source:
    bucket: s3pypi-artifacts
    regexp: wowclient/wowclient-(.*).tar.gz
    access_key_id: ((aws-access-key-id))
    secret_access_key: ((aws-secret-access-key))

jobs:
- name: validate-pr
  plan:
  - get: pr
    trigger: true
    version: every
  - put: pr
    params:
      path: pr
      status: PENDING
  - do:
    - task: validate
      file: pr/ci/task_test_and_build.yml
      input_mapping: { source: pr }
    - task: verify-unique-version
      file: pr/ci/task_verify_unique_version.yml
      input_mapping: { source: pr }
      params:
        BUCKET: s3pypi-artifacts
        PROJECT: wowclient
        AWS_ACCESS_KEY_ID: ((aws-access-key-id))
        AWS_SECRET_ACCESS_KEY: ((aws-secret-access-key))
    on_failure:
      put: pr
      params:
        path: pr
        status: FAILURE
  - put: pr
    params:
      path: pr
      status: SUCCESS
      
- name: publish
  plan:
  - get: source
    trigger: true
    version: every
  - task: build
    file: source/ci/task_test_and_build.yml
  - task: verify-unique-version
    file: source/ci/task_verify_unique_version.yml
    params:
      BUCKET: s3pypi-artifacts
      PROJECT: wowclient
      AWS_ACCESS_KEY_ID: ((aws-access-key-id))
      AWS_SECRET_ACCESS_KEY: ((aws-secret-access-key))
  - put: artifacts
    params:
      file: dist/wowclient-*.tar.gz

